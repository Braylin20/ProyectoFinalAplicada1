@page "/EditDemanda/{DemandaId:int}"

@rendermode InteractiveServer
@inject NotificationService notificationService
@inject DemandaServices demandaServices
@inject AlguacilServices alguacilServices
@inject EstadoServices estadoServices
@inject AudienciasServices audienciaServices
@inject TipoDemandaServices tipoDemandaServices
@inject UserManager<ApplicationUser> userManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<RadzenNotification />
<EditForm Model="Demanda" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    
    <div class="container-fluid ">
        <div class="card shadow-lg ">
            <div class="card-header " style="background-color: #012E40">
                <h3 class="text-center text-white">Editar Demanda</h3>
            </div>
            <div class="row">
                <div class="card-body">
                    <AuthorizeView Roles="Empleado,Admin,Juez">
                        <ChildContent Context="formContext">
                            <div class="row"
                                <div class="col-6">
                                     <label class="fw-bold mb-2">Alguacil</label>
                                    <InputSelect @bind-Value="Demanda.AlguacilId" class="form-select mb-2">
                                        <option value="">Elija una opci&oacute;n</option>
                                        @foreach (var item in Alguaciles)
                                        {
                                            <option value="@item.AlguacilId">@item.Nombre</option>
                                        }
                                    </InputSelect>
                                </div>
                               <div class="col-6">
                                    <div class="d-flex flex-column"> 
                                        <label class="fw-bold d-flex align-content-center mb-2">Estado de demanda</label>
                                        <InputRadioGroup @bind-Value="Demanda.EstadoId" class="form-check mb-auto">
                                            @* <div class="form-check">
                                                <InputRadio Value="1" class="custom-radio" style="width: 1em;height: 1em;margin-right: 0.5em;"/>
                                                <label class="form-check-label">Finalizado</label>
                                            </div> *@
                                            <div class="form-check">
                                                <InputRadio Value="2" class="custom-radio" style="width: 1em;height: 1em;margin-right: 0.5em;"/>
                                                <label class="form-check-label">En Proceso</label>
                                            </div>
                                            <div class="form-check">
                                                <InputRadio Value="4" class="custom-radio" style="width: 1em;height: 1em;margin-right: 0.5em;"/>
                                                <label class="form-check-label">En Proceso de Sentencia</label>
                                            </div>
                                        </InputRadioGroup>
                                    </div>
                               </div>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <label class="fw-bold mb-2">Tipo de Demanda</label>
                                    <InputSelect @bind-Value="Demanda.TiposDemandasId" class="form-select mb-2">
                                        <option value="">Elija una opci&oacute;n</option>
                                        @foreach (var item in TiposDemandas)
                                        {
                                            <option value="@item.TiposDemandasId">@item.TipoDemanda</option>

                                        }
                                    </InputSelect>
                                </div>
                                <div class="col-6">
                                    <label class="fw-bold mb-2">Fecha de audiencia</label>
                                    <InputSelect @bind-Value="Demanda.AudienciaId" class="form-select mb-2">
                                        <option value="">Elija una opci&oacute;n</option>
                                        @foreach (var item in Audiencias)
                                        {
                                            <option value="@item.AudienciaId">@item.FechaAudiencia</option>

                                        }
                                    </InputSelect>
                                </div>
                            </div>
                        </ChildContent>
                       
                    </AuthorizeView>
                    <div class="row">
                        <div class="col-12">
                            <label class="fw-bold mb-2">Descripci&oacute;n</label>
                            <InputTextArea @bind-Value="Demanda.Descripcion" class="form-control mb-3"/>
                            <ValidationMessage For="@(()=>Demanda.Descripcion)" />
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-6">
                            <div class="card-body border border-primary">
                                <div>
                                    <h3>Registro Demandado</h3>
                                </div>
                                <div class="row">
                                    <div class="col-6 ">
                                        <label>Nombre</label>
                                        <div class="input-group">
                                            <InputText @bind-Value="demandasDetalle.NombreDemandado" class="form-control " />
                                            <button type="button" class="btn btn-success bi-floppy-fill" @onclick="AgregarDetalleDemandado">Agregar</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-8">
                                        <label class="mt-3">Numero de c&eacute;dula</label>
                                        <InputText @bind-Value="demandasDetalle.NumCedulaDemandado" class="form-control" />
                                    </div>
                                </div>
                                <hr clas="border-bottom" />
                                <div>
                                    <table class="table table-bordered text-center">
                                        <thead class="text-white" style="background-color: #012E40">
                                            <tr>
                                                <th>Nombre de Demandado</th>
                                                <th>Numero de C&eacute;dula</th>
                                                <th>Eliminar</th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Demanda.DemandaDetalles)
                                            {
                                                <tr>
                                                    <td>@item.NombreDemandado</td>
                                                    <td>@item.NumCedulaDemandado</td>
                                                    <td>
                                                        <button type="button" class="btn btn-danger bi bi-trash-fill" @onclick="@(()=> RemoverDetalleDemandado(item))" >
                                                            <img src="DeleteBlack.svg" style="width: 25px;" />
                                                        </button>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="card-body  border border-primary">
                                <div>
                                    <h3>Registro Niño</h3>
                                </div>
                                <div class="row">
                                    <div class="col-6 ">
                                        <label>Fecha de nacimiento</label>
                                        <div class="input-group">
                                            <InputDate @bind-Value="NinoDetalle.FechaNacimientoNino" class="form-control " />
                                            <button type="button" class="btn btn-success bi-floppy-fill" @onclick="AgregarDetalleNino">Agregar</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-6">
                                        <label class="mt-3">Nombre</label>
                                        <InputText @bind-Value="NinoDetalle.NombreNino" class="form-control" />
                                    </div>
                                    <div class="col-6">
                                        <label class="mt-3">Genero</label>
                                        <InputSelect @bind-Value="NinoDetalle.Genero" class="form-control">
                                            <option value="">Seleccione un genero</option>
                                            <option value="Femenino">Femenino</option>
                                            <option value="Masculino">Masculino</option>
                                        </InputSelect>
                                    </div>
                                </div>
                                <hr clas="border-bottom" />
                                <div>
                                    <table class="table table-bordered text-center">
                                        <thead class="text-white " style="background-color: #012E40">
                                            <tr>
                                                <th>Nombre del niño</th>
                                                <th>G&eacute;nero</th>
                                                <th>Fecha de Nacimiento</th>
                                                <th>Eliminar</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Demanda.UsuarioNinoDetalles)
                                            {
                                                <tr>
                                                    <td>@item.NombreNino</td>
                                                    <td>@item.Genero</td>
                                                    <td>@item.FechaNacimientoNino</td>
                                                    <td>
                                                        <button type="button" class="btn btn-danger bi bi-trash-fill" @onclick="@(()=> RemoverDetalleNino(item))" >
                                                            <img src="DeleteBlack.svg" style="width: 25px;" />
                                                        </button>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <AuthorizeView Roles="Admin,Empleado">
                <ChildContent Context="formContext">

                    <div class="card-footer">
                        <div class="btn-group">
                            <a href="IndexDemanda" class="btn text-white" style=" background-color: #012E40">
                                <img src="Back.svg" style="width:25px; " />Atr&aacute;s
                            </a>

                            <button type="submit" class="btn btn-success">
                                <img src="Save.svg" style="width:25px" /> Editar
                            </button>
                        </div>
                    </div>
                </ChildContent>
            </AuthorizeView>

            <AuthorizeView Roles="User">
                <ChildContent Context="formContext">

                    <div class="card-footer">
                        <div class="btn-group">
                            <a href="IndexDemandaUser" class="btn text-white" style=" background-color: #012E40">
                                <img src="Back.svg" style="width:25px; " />Atr&aacute;s
                            </a>

                            <button type="submit" class="btn btn-success">
                                <img src="Save.svg" style="width:25px" /> Guardar
                            </button>
                        </div>
                    </div>
                </ChildContent>
            </AuthorizeView>
        </div>
    </div>


</EditForm>
@code {
    [Parameter]
    public int DemandaId { get; set; }
    public Demandas Demanda = new Demandas();
    public DemandasDetalle demandasDetalle = new DemandasDetalle();
    public NinoDetalle NinoDetalle = new NinoDetalle();
    public ApplicationUser User = new ApplicationUser();
    public List<Alguaciles> Alguaciles { get; set; } = new List<Alguaciles>();
    public List<EstadosDemandas> EstadoDemandas { get; set; } = new List<EstadosDemandas>();
    public List<Audiencias> Audiencias { get; set; } = new List<Audiencias>();
    public List<TiposDemandas> TiposDemandas { get; set; } = new List<TiposDemandas>();
    private AuthenticationState authenticationState;
    private string estado;

    protected override async Task OnInitializedAsync()
    {
        Demanda = await demandaServices.GetDemanda(DemandaId);
        Alguaciles = await alguacilServices.GetAlguaciles();
        EstadoDemandas = await estadoServices.Listar(e => true);
        Audiencias = await audienciaServices.Listar(e => true);
        TiposDemandas = await tipoDemandaServices.Listar();
        Alguaciles = await alguacilServices.GetAlguaciles();
        // Nino.FechaNacimiento = DateTime.Now;
        authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

    }
    

    public async Task AgregarDetalleDemandado()
    {
        if (demandasDetalle.NombreDemandado == null || demandasDetalle.NumCedulaDemandado == null || demandasDetalle.NumCedulaDemandado.Length != 11)
        {
            var mensajeError = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "Debe ingresar algún valor en el demandado o la cédula es invalida",
                    Duration = 4_000
                };
            notificationService.Notify(mensajeError);
            return;
        }
        else
        {
            Demanda.DemandaDetalles.Add(demandasDetalle);
            demandasDetalle = new DemandasDetalle();
        }
    }
    public async Task AgregarDetalleNino()
    {
        if (NinoDetalle.NombreNino is null || NinoDetalle.Genero is null || NinoDetalle.FechaNacimientoNino is null)
        {
            var mensajeError = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "Debe ingresar algún valor en el niño",
                    Duration = 4_000
                };
            notificationService.Notify(mensajeError);
            return;
        }
        else
        {
            Demanda.UsuarioNinoDetalles.Add(NinoDetalle);
            NinoDetalle = new NinoDetalle();
        }
    }

    public async Task Guardar()
    {
        Demanda.Fecha = DateTime.Now;
        // var user = await userManager.GetUserAsync(authenticationState.User);
        // NinoDetalle.Id=user.Id;

        var guardado = await demandaServices.Save(Demanda);
        if (!guardado)
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "No se ha editado correctamente",
                    Duration = 4_000
                };
            notificationService.Notify(mensaje);
        }
        else
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Éxito",
                    Detail = "Se ha editado correctamente",
                    Duration = 4_000
                };
            notificationService.Notify(mensaje);
            demandasDetalle = new DemandasDetalle();
            NinoDetalle = new NinoDetalle();
        }
    }
    public async Task RemoverDetalleDemandado(DemandasDetalle detalle)
    {
        var detalleEncontrado = Demanda.DemandaDetalles.FirstOrDefault(v => v.DetalleId == detalle.DetalleId);
        if (detalleEncontrado != null)
        {
            Demanda.DemandaDetalles.Remove(detalle);
        }
    }
    public async Task RemoverDetalleNino(NinoDetalle detalle)
    {
        var detalleEncontrado = Demanda.UsuarioNinoDetalles.FirstOrDefault(v => v.DetalleId == detalle.DetalleId);
        if (detalleEncontrado != null)
        {
            Demanda.UsuarioNinoDetalles.Remove(detalle);
        }
    }
    public bool Validar()
    {
        return Demanda.DemandaDetalles
        .Any(v => v.NumCedulaDemandado == demandasDetalle.NumCedulaDemandado);
    }
    public void Nuevo()
    {
        Demanda = new Demandas();
        demandasDetalle = new DemandasDetalle();
        Demanda.Fecha = DateTime.Now;
    }


}
