@page "/CreateExpediente"
@inject ExpedienteServices expedienteService
@inject SentenciaServices sentenciaService
@inject DemandaServices demandaService
@inject TiposResolucionServices resolucionService
@inject TipoDemandaServices demandasServices
@inject UserManager<ApplicationUser> UserManager
@rendermode InteractiveServer
<PageTitle>Ticket</PageTitle>

<EditForm Model="expediente" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h3>Registro de Expediente.</h3>
            </div>
            <div class=card-body>

                <div class="row">
                    <div class="col-6 mb-3">
                        <label class="form-label" for="Nombre">C&eacute;dula:</label>
                        <div class="input-group">
                            <InputNumber type="number" @bind-Value="@Usuario.Cedula" class="form-control" />
                            <button type="button"class="btn btn-outline-primary" @onclick="BuscarUsuario">Buscar</button>
                        </div>
                        
                    </div>
                    <div class="col-6 mb-3">
                        <label class="form-label" for="Nombre">Nombre:</label>
                        <InputText @bind-Value="Usuario.Nombre" class="form-control" readonly />
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-6 mb-3">
                        <label class="form-label" for="Nombre">Apellido:</label>
                        <InputText @bind-Value="Usuario.Apellido" class="form-control" readonly />
                    </div>
                    <div class="col-6 mb-3">
                        <div class="col-6 mb-3">
                            <label class="form-label" for="Nombre">Email:</label>
                            <InputText @bind-Value="Usuario.UserName" class="form-control" readonly />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-6 mb-3">
                        <label class="form-label" for="SolicitadoPor">Resolucion Sentencia</label>
                        <InputSelect @bind-Value="expediente.SentenciaId" class="form-control">
                            <option value="">Seleccione una opcion</option>
                            @foreach (var item in sentencias)
                            {
                                var tipoResolucion = resolucionService.GetResolucion(item.ResolucionId);
                                <option value="@item.SentenciaId">@tipoResolucion</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => expediente.SentenciaId)" />
                    </div>


                    <div class="mb-3 col-6">
                        <label class="form-label" for="Nombre">Tipo Demanda:</label>
                        <InputSelect @bind-Value="expediente.DemandaId" class="form-control">
                            <option value="">Seleccione una opcion</option>
                            @foreach (var item in demandas)
                            {
                                var tipoDemanda = demandasServices.GetTipoDemanda(item.TiposDemandasId);
                                <option value="@item.DemandaId">@tipoDemanda</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => expediente.DemandaId)" />
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="SolicitadoPor">Comentario</label>
                    <InputTextArea @bind-Value="expediente.Comentario" class="form-control" />
                    <ValidationMessage For="@(() => expediente.Comentario)" />
                </div>

               
            </div>
            <div class="card-footer d-flex justify-content-between">

                <div class="btn">
                    <a href="" class="bi bi-arrow-return-left btn btn-outline-primary">Volver</a>
                </div>

                <div class="btn align-self-center">
                    <button type="submit" class="bi bi-floppy btn btn-outline-success">Guardar <i class="oi oi-document" /></button>
                
                </div>

                <div>
                </div>

            </div>

        </div>
    </div>
</EditForm>


@code {
    public Expedientes expediente = new Expedientes();
    public List<Sentencias> sentencias { get; set; } = new List<Sentencias>();
    public List<Demandas> demandas { get; set; } = new List<Demandas>();
    public ApplicationUser Usuario { get; set; } = new ApplicationUser();
    public List<ApplicationUser> Usuarios { get; set; } = new List<ApplicationUser>();

    protected override async Task OnInitializedAsync()
    { 
        sentencias = await sentenciaService.Listar(p => true);
        demandas = await demandaService.Listar(p => true);

    }

    public async Task BuscarUsuario()
    {
        
        if (string.IsNullOrEmpty(Usuario.Cedula.ToString()))
        {
            Usuario.Nombre = string.Empty;
            Usuario.Apellido = string.Empty;
            Usuario.UserName = string.Empty;
            return;
        }
        var users = UserManager.Users.ToList();
        var user = users.FirstOrDefault(u => u.Cedula == Usuario.Cedula);
        
        Usuario = new ApplicationUser
        {
            Cedula = user.Cedula,
            Nombre = user.Nombre,
            Apellido = user.Apellido,
            UserName = user.UserName
        };
        
    }
    
    public async Task Guardar()
    {
        var guardo = await expedienteService.Save(expediente);

        var users = UserManager.Users.ToList();
        var user = users.FirstOrDefault(u => u.Cedula == Usuario.Cedula);
        // user.ExpedienteId = expediente.ExpedienteId;
        await UserManager.UpdateAsync(user);

        if (guardo)
        {
            Nuevo();  
            Usuario= new ApplicationUser();
        }
    }

    public void Nuevo()
    {
        expediente = new Expedientes();
    }


}