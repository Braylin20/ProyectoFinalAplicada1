@page "/ViewEmpleado/{Id:guid}"

@inject ApplicationUserServices ApplicationUserServices
@inject NotificationService NotificationService
@attribute [Authorize(Roles = "Admin,Empleado")]
@rendermode InteractiveServer
<RadzenNotification />
<div class="container">
    <div class="card shadow-lg">
        <div class="card-header" style=" background-color: #012E40">
            <h3 class="text-white">Eliminar Demanda</h3>
        </div>
        <div class=card-body>
            <p class="fw-bold">Nombre: @User.Nombre</p>
            <p class="fw-bold">Apellido: @User.Apellido</p>
            <p class="fw-bold">C&eacute;dula: @User.Cedula</p>
            <p class="fw-bold">Email: @User.UserName</p>
        </div>

        <div class="card-footer">
            <div class="btn-group">
                <a href="IndexEmpleado" class="btn text-white" style=" background-color: #012E40">
                    <img src="Back.svg" style="width:25px; " />Atr&aacute;s
                </a>
            </div>
        </div>

    </div>
</div>


@code {
    [Parameter]
    public Guid Id { get; set; }
    public Demandas Demanda = new Demandas();
    public Audiencias Audiencia = new Audiencias();
    public TiposDemandas TiposDemandas = new TiposDemandas();
    public List<TiposDemandas> TiposDemadas { get; set; } = new List<TiposDemandas>();
    public ApplicationUser User { get; set; } = new ApplicationUser();

    protected override async Task OnInitializedAsync()
    {
        User = await ApplicationUserServices.GetUser(Id.ToString());
    }

    

    public void Nuevo()
    {
        User = new ApplicationUser();
    }


    public List<Sentencias> sentencias { get; set; } = new List<Sentencias>();
    public List<Demandas> demandas { get; set; } = new List<Demandas>();



}