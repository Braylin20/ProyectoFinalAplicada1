@page "/IndexEmpleado"
@inject EmpleadoServices empleadoServices
@inject UserManager<ApplicationUser> userManager
@rendermode InteractiveServer
@inject NotificationService notificationService
@attribute [StreamRendering]
<RadzenNotification />

<div class="card shadow-lg">
    <div class="card-header" style="background-color: #012E40">
        <h3 class="text-white text-center">Index Empleado</h3>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-6">

                <div class="row">
                    <div class="col-6">
                        <label class="fw-bold">Fecha Inicio</label>
                        <InputDate @bind-Value="FechaInicio" class="form-control mb-4"/>
                    </div>
                    <div class="col-6">
                        <label class="fw-bold">Fecha Final</label>
                        <div class="input-group">
                            <InputDate @bind-Value="FechaFinal" class="form-control" />
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="FiltrarPorfecha">
                                <img src="Search.svg" style="width: 20px;" />
                            </button>
                        </div>
                        
                    </div>
                </div>
                
            </div>
        </div>
        <div class="row">
            <div class="col-3">
                <label class="fw-bold">Filtrar Por</label>
                <div class="input-group">
                    
                    <InputSelect @bind-Value="Opcion" class="form-select mb-3">
                        <option value="1">C&eacute;dula</option>
                        <option value="2">Nombre</option>
                        <option value="3">Todo</option>
                    </InputSelect>
                    @if (Opcion == 3)
                    {
                        <button type="button" class="btn btn-primary" style="height: 38px;" @onclick="Filtrar">
                            <img src="Search.svg" style="width: 20px;" />
                        </button>
                    }
                </div>
            </div>
            @switch (Opcion)
            {
                case 1:
                    <div class="col-3">
                        <label class="fw-bold">C&eacute;dula</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="User.Cedula" class="form-control"></InputNumber>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Filtrar">
                                <img src="Search.svg" style="width: 20px;" />
                            </button>
                        </div>
                    </div>
                    
                    break;
                case 2:
                    <div class="col-3">
                        <label class="fw-bold">Nombre</label>
                        <div class="input-group">
                            <InputText @bind-Value="User.Nombre" class="form-control"></InputText>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Filtrar">
                                <img src="Search.svg" style="width: 20px;" />
                            </button>
                        </div>
                    </div>
                    break;
            }
        </div>
        <AuthorizeView Roles="Admin">
            <div class="justify-content-end d-flex mb-4">
                <a href="CreateEmpleado" class="btn btn-primary bi-floppy-fill"> <img src="/Create.svg" style="width: 30px;" />Create</a>
                
            </div>
        </AuthorizeView>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th class="table-head text-white" style="background-color: #012E40">Nombre</th>
                    <th class="table-head text-white" style="background-color: #012E40">Apellido</th>
                    <th class="table-head text-white" style="background-color: #012E40">Fecha Creaci&oacute;n</th>
                    <th class="table-head text-white" style="background-color: #012E40">Email</th>
                    <th class="table-head text-white" style="background-color: #012E40">Opciones</th>
                </tr>
            </thead>
            @if(Empleados.Count == 0)
            {
                <tbody>
                    <tr>
                        <td colspan="6" class="text-center border border-4 bg-light p-3">
                            <h4>No hay registros</h4>
                        </td>
                    </tr>
                </tbody>
            }
            else
            {
                <tbody>
                    @foreach (var item in Empleados)
                    {
                        <tr>
                            <td>@item.Nombre</td>
                            <td>@item.Apellido</td>
                            <td>@item.FechaCreacion.ToString("dd/MM/yyyy")</td>
                            <td>@item.UserName</td>
                            <td>
                                <a href="/EditEmpleado/@item.Id">
                                    <img src="Edit.svg" style="width: 30px;" />
                                </a>
                                <a href="/DeleteEmpleado/@item.Id">
                                    <img src="Delete.svg" style="width: 35px;" />
                                </a>
                                <a href="/ViewEmpleado/@item.Id">
                                    <img src="Info.svg" style="width: 35px;" />
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            }
        </table>
        
    </div>
</div>

@code {
    public ICollection<ApplicationUser> Empleados { get; set; } = new List<ApplicationUser>();
    public ApplicationUser User { get; set; } = new ApplicationUser();
    public int Opcion { get; set; }
    public DateTime FechaInicio { get; set; }
    public DateTime FechaFinal { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Empleados = await userManager.GetUsersInRoleAsync("Empleado");
        FechaFinal = DateTime.Now;
        FechaInicio = DateTime.Now;
    }

    public async Task FiltrarPorfecha()
    {
        Empleados = await userManager.GetUsersInRoleAsync("Empleado");
        Empleados = await empleadoServices.ListarPorFecha(Empleados, FechaInicio, FechaFinal);
    }
    public async Task Filtrar()
    {
        if (Opcion == 1)
        {
            Empleados = await userManager.GetUsersInRoleAsync("Empleado");
            var cedula = await empleadoServices.ListarPorCedula(Empleados, User);
            Empleados = await empleadoServices.ListarPorCedula(Empleados, User);
            

        }
        else if (Opcion == 2)
        {
            Empleados = await userManager.GetUsersInRoleAsync("Empleado");
            Empleados = await empleadoServices.Listar(Empleados, User);
        }
       
        else if (Opcion == 3)
            Empleados = await userManager.GetUsersInRoleAsync("Empleado");
    }

}