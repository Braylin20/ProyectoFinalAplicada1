@page "/IndexAudiencia"
@rendermode InteractiveServer
@inject AudienciasServices audienciaServices
@inject NotificationService notificationService
@attribute [Authorize(Roles = "Admin,Empleado")]

<RadzenNotification />
<div class="card shadow-lg">
    <div class="card-header">
        <h3 class="text-white text-center">Index Audiencia</h3>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-6">

                <div class="row">
                    <div class="col-6">
                        <label class="fw-bold">Fecha Inicio</label>
                        <InputDate @bind-Value="FechaInicio" class="form-control mb-4" />
                    </div>
                    <div class="col-6">
                        <label class="fw-bold">Fecha Final</label>
                        <div class="input-group">
                            <InputDate @bind-Value="FechaFinal" class="form-control" />
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="FiltrarPorfecha"><img src="/Buscar2.svg" style="width: 20px;" />Buscar</button>
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-3">
                <label class="fw-bold">Filtrar Por</label>
                <div class="input-group">

                    <InputSelect @bind-Value="Opcion" class="form-select mb-3">
                        <option value="1">Id</option>
                        <option value="2">Comentario</option>
                        <option value="3">Todo</option>
                    </InputSelect>
                    @if (Opcion == 3)
                    {
                        <button type="button" class="btn btn-primary" style="height: 38px;" @onclick="Filtrar"><img src="/Buscar2.svg" style="width: 20px;" />Buscar</button>
                    }
                </div>
            </div>
            @switch (Opcion)
            {
                case 1:
                    <div class="col-3">
                        <label class="fw-bold">C&eacute;dula</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="Audiencias.AudienciaId" class="form-control"></InputNumber>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Filtrar"></button>
                        </div>
                    </div>

                    break;
                case 2:
                    <div class="col-3">
                        <label class="fw-bold">Nombre</label>
                        <div class="input-group">
                            <InputText @bind-Value="Audiencias.Comentario" class="form-control" @oninput="FiltrarPorComentario"></InputText>
                            <button type="button" class="btn btn-primary bi bi-search" @onclick="Filtrar"></button>
                        </div>
                    </div>
                    break;
            }
        </div>
        <div class="justify-content-end d-flex mb-4">
            <a href="CreateAudiencia" class="btn btn-primary bi-floppy-fill"> <img src="/Create.svg" style="width: 30px;" />Create</a>
        </div>
        <table class="table table-bordered text-center">
            <thead>
                <tr>
                    <th class="table-head text-white" style="background-color: #012E40">AudienciaId</th>
                    <th class="table-head text-white" style="background-color: #012E40">Fecha</th>
                    <th class="table-head text-white" style="background-color: #012E40">Comentario</th>
                    <th class="table-head text-white" style="background-color: #012E40">Opci&oacute;nes</th>
                </tr>
            </thead>

            @if (ListaAudiencias.Count == 0)
            {
                <tbody>
                    <tr>
                        <td colspan="6" class="text-center border border-4 bg-light p-3">
                            <h4>No hay registros</h4>
                        </td>
                    </tr>
                </tbody>
            }
            else
            {
                <tbody>
                    @foreach (var item in ListaAudiencias)
                    {
                        <tr>
                            <td>@item.AudienciaId</td>
                            <td>@item.FechaAudiencia.ToString("dd/MM/yyyy")</td>
                            <td>@item.Comentario</td>
                            <td>
                                <a href="/EditAudiencia/@item.AudienciaId">
                                    <img src="Edit.svg" style="width: 30px;" />
                                </a>
                                <a href="/DeleteAudiencia/@item.AudienciaId">
                                    <img src="Delete.svg" style="width: 35px;" />
                                </a>
                                <a href="/ViewAudiencia/@item.AudienciaId">
                                    <img src="Info.svg" style="width: 35px;" />
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            }


        </table>

    </div>
</div>



@code {
    public Audiencias Audiencias { get; set; } = new Audiencias();
    public List<Audiencias>? ListaAudiencias = new List<Audiencias>();
    public List<Demandas>? ListaDemandas = new List<Demandas>();
    public int Opcion { get; set; }
    public Demandas? demandas = new Demandas();
    public DateTime FechaInicio { get; set; }
    public DateTime FechaFinal { get; set; }
    protected override async Task OnInitializedAsync()
    {
        ListaAudiencias = await audienciaServices.GetAudiencias();
        FechaFinal = DateTime.Now;
        FechaInicio = DateTime.Now;
    }

    public async Task FiltrarPorfecha()
    {
        ListaAudiencias = await audienciaServices.GetAudiencias();
        ListaAudiencias = ListaAudiencias.Where(x => x.FechaAudiencia.Date >= FechaInicio.Date && x.FechaAudiencia.Date <= FechaFinal.Date).ToList();
    }

    public async Task FiltrarPorComentario(ChangeEventArgs e)
    {
        Audiencias.Comentario = e.Value?.ToString();
        await Filtrar();
    }

    public async Task Filtrar()
    {
        if (Opcion == 1)
        {
            ListaAudiencias = await audienciaServices.GetAudiencias();
            ListaAudiencias = ListaAudiencias.Where(a => a.AudienciaId == Audiencias.AudienciaId).ToList();
        }
        else if (Opcion == 2)
        {
            ListaAudiencias = await audienciaServices.GetAudiencias();
            ListaAudiencias = ListaAudiencias.Where(a => a.Comentario!.ToLower().Contains(Audiencias.Comentario!.ToLower())).ToList();
        }

        else if (Opcion == 3)
            ListaAudiencias = await audienciaServices.GetAudiencias();
    }


}
