@page "/DeleteAlguacil/{AlguacilId:int}"
@attribute [Authorize(Roles = "Admin,Empleado")]
@rendermode InteractiveServer
@inject NotificationService notificationService
@inject AlguacilServices alguacilService
@attribute [StreamRendering]

<RadzenNotification />

<EditForm Model="Alguacil" OnValidSubmit="Eliminar">
    <DataAnnotationsValidator />



    <div class="container-fluid">
        <div class="card shadow-lg w-50 mx-auto">
            <div class="card-header" style="background-color: #012E40;">
                <h3 class="text-center text-white">Registro Alguacil</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-12">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="fw-bold" for="Nombre">Nombre:</label>
                                <InputText @bind-Value="Alguacil.Nombre" class="form-control-plaintext" readonly />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="fw-bold" for="Apellido">Apellido:</label>
                                <InputText @bind-Value="Alguacil.Apellido" class="form-control-plaintext" readonly />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="fw-bold" for="FechaCreacion">Fecha Creación:</label>
                                <InputDate @bind-Value="Alguacil.FechaCreacion" class="form-control-plaintext" readonly />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="d-flex justify-content-between align-items-center">
                    <a href="IndexAlguacil" class="btn btn-secondary">Atrás</a>
                    <button type="submit" class="bi bi-floppy btn btn-outline-danger">Eliminar</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>



@code {

    [Parameter]
    public int AlguacilId { get; set; }
    public Alguaciles Alguacil { get; set; } = new Alguaciles();

    protected override async Task OnInitializedAsync()
    {
        Alguacil = await alguacilService.GetAlguacil(AlguacilId);
        
    }

    public async Task Eliminar()
    {
        try
        {
            await alguacilService.DeleteAlguacil(AlguacilId);
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Éxito",
                    Detail = "Se ha Eliminado correctamente",
                    Duration = 4000 
                };
            notificationService.Notify(mensaje);
            Alguacil = new Alguaciles();
        }
        catch (Exception ex)
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "No se ha podido eliminar el alguacil: " + ex.Message,
                    Duration = 4000 
                };
            notificationService.Notify(mensaje);
        }

    }
}
