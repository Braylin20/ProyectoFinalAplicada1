@page "/CreateAlguacil"
@attribute [Authorize(Roles = "Admin,Empleado")]
@inject NotificationService notificationService
@inject AlguacilServices alguacilService
@attribute [StreamRendering]
@rendermode InteractiveServer

<RadzenNotification />

<EditForm Model="Alguacil" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="container-fluid">
        <div class="card shadow-lg w-75 mx-auto mt-5">
            <div class="card-header" style=" background-color: #012E40">
                <h3 class="text-center text-white">Registro de Alguacil</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="fw-bold" for="Nombre">Nombre:</label>
                            <InputText @bind-Value="Alguacil.Nombre" class="form-control" />
                            <ValidationMessage For="@(()=>Alguacil.Nombre)" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="fw-bold" for="Apellido">Apellido:</label>
                            <InputText @bind-Value="Alguacil.Apellido" class="form-control" />
                            <ValidationMessage For="@(()=>Alguacil.Apellido)" />
                        </div>
                    </div>
                   
                </div>
            </div>
            <div class="card-footer">
                <div class="btn-group">
                    <a href="IndexAlguacil" class="btn text-white" style=" background-color: #012E40">
                        <img src="Back.svg" style="width:25px; " />Atr&aacute;s
                    </a>

                    <button type="submit" class="btn btn-success">
                        <img src="Save.svg" style="width:25px" /> Guardar
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>


@code {
    public Alguaciles Alguacil { get; set; } = new Alguaciles();

    protected override async Task OnInitializedAsync()
    {
        Alguacil.FechaCreacion = DateTime.Now;
    }
        public async Task Guardar()
    {
        var guardado = await alguacilService.Save(Alguacil);
        if (!guardado)
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "Error",
                    Detail = "No se ha guardado correctamente",
                    Duration = 4_000
                };
            notificationService.Notify(mensaje);
        }
        else
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Éxito",
                    Detail = "Se ha guardado correctamente",
                    Duration = 4_000
                };
            notificationService.Notify(mensaje);
            Alguacil = new Alguaciles();
        }

    }
}
